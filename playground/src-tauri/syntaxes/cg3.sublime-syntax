%YAML 1.2
---
name: VISL CG3
file_extensions:
  - cg3
scope: source.cg3

contexts:
  main:
    # Comment/debug lines starting with ; (entire line)
    - match: '^;.*$'
      scope: comment.line.semicolon.cg3

    # Literal replacement lines starting with : (entire line)
    # Special scope for background highlighting
    - match: '^:.*$'
      scope: markup.inserted.cg3

    # STREAMCMD lines
    - match: '<STREAMCMD:[^>]+>'
      scope: keyword.control.streamcmd.cg3

    # Surface form at start of cohort: "<word>"
    - match: '^"<[^>]*>"'
      scope: keyword.other.surface-form.cg3
      push: after_surface_form

    # Indented readings (start of line with whitespace)
    - match: '^\s+'
      push: reading_line

  after_surface_form:
    # Anything else on the surface form line is just ignored
    - match: '$'
      pop: true

  reading_line:
    # Base form: "lemma" with optional postfix tag (e.g., "foo"S or "derp"phon)
    - match: '("[^"<>]+")(\S+)?'
      captures:
        1: string.quoted.double.base-form.cg3
        2: entity.name.tag.postfix.cg3
      set: tags

    # Sometimes readings don't start with quotes
    - match: '(?=\S)'
      set: tags

  tags:
    # Weight tags like <W:0.0> or <char:float>
    - match: '<\w+:-?\d+(?:\.\d+)?>'
      scope: constant.numeric.weight.cg3

    # Mapping tags starting with @
    - match: '@\S+'
      scope: entity.name.function.mapping.cg3

    # Tags starting with &
    - match: '&\S+'
      scope: entity.name.type.ampersand.cg3

    # Cohort references with arrows like #1->2
    - match: '#\d+(?:->|â†’)\d+'
      scope: constant.numeric.reference.cg3

    # Angle brackets and slashes (same color as & tags)
    - match: '[<>/]'
      scope: entity.name.type.ampersand.cg3

    # Quoted strings with optional postfix (e.g., "foo"S or "derp"phon)
    - match: '("[^"<>]+")(\S+)?'
      captures:
        1: string.quoted.double.base-form.cg3
        2: entity.name.tag.postfix.cg3

    # Any other non-whitespace sequence is a tag
    - match: '\S+'
      scope: entity.name.tag.cg3

    # End of line
    - match: '$'
      pop: true
